/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jFrames;

import static jFrames.ViewCursosFrame.centreWindow;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.Window;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import sool.*;

/**
 *
 * @author danih
 */
public class ViewPeriodos extends javax.swing.JFrame {

    private int width = 620;
    private int height = 340;
    public String valorPeriodo = "";
    public boolean isEmpty = false;
    public Curso curso;
    boolean isGraduacao;
    
    public ViewPeriodos(Curso curso, boolean isGraduacao) {
        this.curso = curso;
        this.isGraduacao = isGraduacao;
        initPanel();
        initComponents();
        centreWindow(this);
        
        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) { 
                new SOOL().setVisible(true);
            }
        });
    }
    
    public void initPanel(){
        add(createMainPanel());
        setTitle("Lista de Períodos");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setSize(width, height);
        setLocationRelativeTo(null);
        setVisible(true);
    }
    
    private JPanel createMainPanel() {
        JPanel panel = new JPanel(new BorderLayout());
        panel.setBorder(new EmptyBorder(10, 10, 10, 10));
        panel.add(new JScrollPane(showPeriodos()), BorderLayout.CENTER);
        return panel;
    }
    
    public static void centreWindow(Window frame) {
        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((dimension.getWidth() - frame.getWidth()) / 2);
        int y = (int) ((dimension.getHeight() - frame.getHeight()) / 2);
        frame.setLocation(x, y);
    }
    
    public JList<String> showPeriodos(){
        
        DefaultListModel<String> model = new DefaultListModel<>();
        
        Ciclo.listCiclos = new Arquivo().readPeriodo("periodo");
        
        System.out.println("Tamanho lido: " + Ciclo.listCiclos.size());
        System.out.println("Curso lido: " + curso.getNome());
        
        if(Ciclo.listCiclos.isEmpty()){
            model.addElement("NENHUM CICLO ADICIONADO A GRADUAÇÃO!");
        } else {
            for(int i = 0; i < Ciclo.listCiclos.size(); i++){
                System.out.println("Curso no FOR: " + Ciclo.listCiclos.get(i).getCurso().getNome());
                if(Ciclo.listCiclos.get(i).getCurso().getCodigo().equalsIgnoreCase(curso.getCodigo())){
                    model.addElement(
                        "PERÍODO: " + Ciclo.listCiclos.get(i).getDescTema().toUpperCase()
                    );     
                }     
            }    
        }
        
        JList<String> list = new JList<String>(model); 
        
        list.setFont(new Font("Arial", Font.BOLD, 16));
        
        jListItemClickEvent(list);
               
        return list;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        verDisp = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        verDisp.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        verDisp.setForeground(new java.awt.Color(153, 0, 51));
        verDisp.setText("Ver Disciplinas");
        verDisp.setBorder(new javax.swing.border.MatteBorder(null));
        verDisp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verDispActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(verDisp, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(289, Short.MAX_VALUE)
                .addComponent(verDisp, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void verDispActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verDispActionPerformed
        for(int i = 0; i < Ciclo.listCiclos.size(); i++){
            if(Ciclo.listCiclos.get(i).getCurso().getCodigo().equalsIgnoreCase(curso.getCodigo())
                && Ciclo.listCiclos.get(i).getDescTema().equalsIgnoreCase(valorPeriodo)){
                ViewDisciplinas viewDisciplinas =
                new ViewDisciplinas(
                        Ciclo.listCiclos.get(i), 
                        Ciclo.listCiclos.get(i).getCurso(),
                        isGraduacao);
                viewDisciplinas.setVisible(true);
                viewDisciplinas.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                this.setVisible(false);
                System.out.println("Nome do Curso: " + Ciclo.listCiclos.get(i).getCurso().getNome());
                System.out.println("Ciclo da Disciplina: " + Ciclo.listCiclos.get(i).getDescTema());
                break;
            }
        }
    }//GEN-LAST:event_verDispActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewPeriodos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewPeriodos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewPeriodos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewPeriodos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

    }
    
    private void jListItemClickEvent(JList dataList) {
        
        dataList.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                String value = dataList.getSelectedValue().toString() + " ";
                if(value.contains(":")){
                    valorPeriodo = value.substring(value.indexOf(":") + 1, 
                            value.length() - 1).trim();    
                    System.out.println("Código do Período: " + valorPeriodo); 
                } else {
                    valorPeriodo = "";
                    isEmpty = true;
                }
                
            }
        });  
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton verDisp;
    // End of variables declaration//GEN-END:variables
}
